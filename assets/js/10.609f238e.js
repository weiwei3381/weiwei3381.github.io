(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{373:function(t,e,a){"use strict";a.r(e);var n=a(19),r=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"docker实战"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker实战"}},[t._v("#")]),t._v(" Docker实战")]),t._v(" "),a("blockquote",[a("p",[t._v("经典参考资料:"),a("a",{attrs:{href:"https://docker_practice.gitee.io/zh-cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker技术入门与实战"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),a("p",[t._v("Docker容器与虚拟机类似，但二者在原理上不同。容器是将操作系统层虚拟化，虚拟机则是虚拟化硬件，因此容器更具有便携性、高效地利用服务器。 容器更多的用于表示 软件的一个标准化单元。由于容器的标准化，因此它可以无视基础设施（Infrastructure）的差异，部署到任何一个地方。另外，Docker也为容器提供更强的业界的隔离兼容。")]),t._v(" "),a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("h3",{attrs:{id:"windows上进行安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#windows上进行安装"}},[t._v("#")]),t._v(" windows上进行安装")]),t._v(" "),a("p",[t._v("windows使用docker需要在win10专业版上，并且开启Hyper-V虚拟机，同时主板的BISO也要开启虚拟化。")]),t._v(" "),a("ol",[a("li",[t._v("进入BIOS，选择Configuration的选项，Intel Virtual Technology的选项设置成Enable的状态。")]),t._v(" "),a("li",[t._v("“开始”菜单点右键，进入“程序和功能”，在“程序和功能”中点击“启用或关闭Windows功能”，选择开启“Hyper-V”；也可以使用命令"),a("code",[t._v("Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All")]),t._v("，在管理员身份的PowerShell中运行。开启此功能需要联网。")])]),t._v(" "),a("p",[t._v("然后进入"),a("a",{attrs:{href:"https://docs.docker.com/docker-for-windows/install/",target:"_blank",rel:"noopener noreferrer"}},[t._v("docker官网的windows安装指南"),a("OutboundLink")],1),t._v("，下载“Docker Desktop for Windows”，2021年1月版本的"),a("a",{attrs:{href:"https://pan.baidu.com/s/1wlfhLHACPJeUobZifzzdGA",target:"_blank",rel:"noopener noreferrer"}},[t._v("百度云"),a("OutboundLink")],1),t._v("备份，提取码为zdsi。")]),t._v(" "),a("h3",{attrs:{id:"初始配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始配置"}},[t._v("#")]),t._v(" 初始配置")]),t._v(" "),a("p",[t._v("网上已经有很多docker镜像，配置在"),a("a",{attrs:{href:"https://hub.docker.com/search?q=&type=image",target:"_blank",rel:"noopener noreferrer"}},[t._v("hub.docker.com"),a("OutboundLink")],1),t._v("中，但是下载镜像速度很慢，需要配置国内Docker Hub源。经过比较，目前就"),a("a",{attrs:{href:"https://mirrors.ustc.edu.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("科大源"),a("OutboundLink")],1),t._v("维护和访问速度都还不错，镜像地址为"),a("code",[t._v("https://docker.mirrors.ustc.edu.cn/")]),t._v("，配置方法参考"),a("a",{attrs:{href:"https://mirrors.ustc.edu.cn/help/dockerhub.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("帮助"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("其中"),a("strong",[t._v("windows")]),t._v("系统的配置方法如下：")]),t._v(" "),a("p",[t._v('在系统右下角托盘Docker图标内右键菜单选择Settings，打开配置窗口后左侧导航菜单选择DockerEngine，在JSON配置中添加"registry-mirrors"一项，如下所示：')]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"registry-mirrors"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://docker.mirrors.ustc.edu.cn/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("之后点击 “Apply & Restart” 保存并重启 Docker 即可。")]),t._v(" "),a("blockquote",[a("p",[t._v("另外也可以使用DaoCloud的"),a("a",{attrs:{href:"https://hub.daocloud.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Hub"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),a("h3",{attrs:{id:"镜像管理和运行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#镜像管理和运行"}},[t._v("#")]),t._v(" 镜像管理和运行")]),t._v(" "),a("p",[t._v("可以在国外官方源"),a("a",{attrs:{href:"https://hub.docker.com/search?q=&type=image",target:"_blank",rel:"noopener noreferrer"}},[t._v("hub.docker.com"),a("OutboundLink")],1),t._v("中搜索需要的镜像，然后使用下面命令管理镜像。")]),t._v(" "),a("div",{staticClass:"language-docker extra-class"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看帮助")]),t._v("\ndocker pull/images/run "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("help\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 拉取镜像")]),t._v("\ndocker pull "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("OPTIONS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("TAG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看本机镜像")]),t._v("\ndocker images "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("OPTIONS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("REPOSITORY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("TAG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除指定镜像")]),t._v("\ndocker image rm "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("选项"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" <镜像1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("<镜像2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行容器镜像")]),t._v("\ndocker run "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("OPTIONS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" IMAGE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("TAG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("COMMAND"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ARG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 常用[OPTION]有: -d 后台(detach)运行程序; -i 保留交互(interactive)页面; -t 分配虚拟终端(terminal);--name 为容器取个名字; --p hostPort:containerPort 发布(publish)容器端口到主机上; --rm 容器退出时自动清理(ReMove)容器内部的文件系统")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看所有运行的容器进程")]),t._v("\ndocker ps\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看镜像、容器、数据卷所占用的空间")]),t._v("\ndocker system df\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 无标签镜像也被称为 虚悬镜像(dangling image) ，可以用下面的命令专门显示这类镜像")]),t._v("\ndocker image ls "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("f dangling=true\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除所有虚悬镜像")]),t._v("\ndocker image prune\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在容器中运行命令")]),t._v("\ndocker exec "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("OPTIONS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" CONTAINER COMMAND "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ARG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 常用[OPTION]有: -d 后台(detach)运行程序; -i 保留交互(interactive)页面; -t 分配虚拟终端(terminal)")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"docker网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker网络"}},[t._v("#")]),t._v(" Docker网络")]),t._v(" "),a("p",[t._v("Docker网络主要有Host、Bridge和None三种，Host就是用主机端口，而Bridge则利用虚拟网桥进行连接，需要进行端口分发，None则是不连接网络，三种情况如下所示，Docker默认使用Bridge模式。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s3.ax1x.com/2021/01/31/yVZRzQ.png",alt:"yVZRzQ.png"}})]),t._v(" "),a("p",[t._v("网络映射一般在容器启动的时候进行，使用"),a("code",[t._v("docker run -p 主机端口:容器端口")]),t._v("进行映射，如果使用的是"),a("code",[t._v("-P")]),t._v("，则进行随机端口映射。以下是部分实例：")]),t._v(" "),a("div",{staticClass:"language-docker extra-class"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在后台运行nginx，并把容器的8080端口映射到本机80端口")]),t._v("\ndocker run "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p 8080"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("80 nginx\n")])])]),a("h3",{attrs:{id:"使用dockerfile制作镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用dockerfile制作镜像"}},[t._v("#")]),t._v(" 使用Dockerfile制作镜像")]),t._v(" "),a("p",[t._v("Dockerfile是一个用来构建镜像的文本文件，权威可参考"),a("a",{attrs:{href:"https://docs.docker.com/engine/reference/builder/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker: Dockerfile参考"),a("OutboundLink")],1),t._v("文本内容包含了一条条构建镜像所需的指令和说明。Dockerfile"),a("br"),t._v("\n一般由5部分组成")]),t._v(" "),a("ol",[a("li",[t._v("注释部分，类似说明，# 开头")]),t._v(" "),a("li",[t._v("基础镜像信息：FROM 开头，语法为"),a("code",[t._v("FROM image: tag")])]),t._v(" "),a("li",[t._v("维护者信息：MAINTAINER 开头，语法为"),a("code",[t._v("MAINTAINER user <user@example.com>")])]),t._v(" "),a("li",[t._v("构建指令：指定的操作不会在运行的 image 容器上执行，RUN开头。语法为"),a("code",[t._v("RUN command")])]),t._v(" "),a("li",[t._v("设置指令：指定的操作在运行的image容器内部执行")])]),t._v(" "),a("ul",[a("li",[t._v("CMD 指令，语法为"),a("code",[t._v("CMD command param1 param2 ……")]),t._v("，如果用户启动容器的时候指定了运行的命令，则会覆盖掉 CMD 指令")]),t._v(" "),a("li",[t._v("CMD配合ENTRYPOINT，每个dockerfile中只能有一个ENTRYPOINT，当指定多个时，只有最后一个生效")]),t._v(" "),a("li",[t._v("USER（设置容器的用户，默认是root用户）")]),t._v(" "),a("li",[t._v("EXPOSE（指定容器需要映射到宿主机的端口），语法为"),a("code",[t._v("EXPOSE port <port> ……")])]),t._v(" "),a("li",[t._v("ENV（用于设置环境变量），语法为"),a("code",[t._v("ENV key value")])]),t._v(" "),a("li",[t._v("ADD（从宿主机src目录复制文件到容器的dest目录下），语法为"),a("code",[t._v("ADD src dest")])]),t._v(" "),a("li",[t._v("VOLUME（指定挂载点），语法为"),a("code",[t._v("VOLUME [“/tmp/data”]")])]),t._v(" "),a("li",[t._v("WORKDIR（切换目录），可以进行多次切换，对 RUN，CMD，ENTRYPOINT 生效。")]),t._v(" "),a("li",[t._v("ONBUILD（在子镜像中执行）")])]),t._v(" "),a("p",[t._v("需要注意的是，Dockerfile是没有后缀名的，运行的时候，使用"),a("code",[t._v("docker build .")]),t._v("即可运行当前目录下的Dockerfile, 运行完毕则生成镜像，在编译时也可使用"),a("code",[t._v("-t name:tag")]),t._v("指定镜像名称和标签，例如"),a("code",[t._v("docker build -t nginx:v3 .")]),t._v("。")])])}),[],!1,null,null,null);e.default=r.exports}}]);